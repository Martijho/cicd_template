name: Update Pointers

on:
  push:
    tags:
      - latest

jobs:
  set-new-latest:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Fetch all tags
        run: git fetch --tags
   
      - name: Check if commit is tagged as a valid release
        id: check-release
        run: |
          # Get the commit that 'latest' tag is pointing to
          TARGET_COMMIT=$(git rev-parse HEAD)
          echo "The commit for 'latest' tag is: $TARGET_COMMIT"
          # Find all tags pointing at this commit
          TAGS=$(git tag --points-at "$TARGET_COMMIT")

          # Filter for semantic version tags (vX.Y.Z)
          VERSION_TAG=$(echo "$TAGS" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)

          # If no version tag found, fail the workflow and delete 'latest'
          if [[ -z "$VERSION_TAG" ]]; then
            echo "❌ Commit is not a release (no semantic version tag found)"
            git tag -d latest  # Delete the 'latest' tag locally
            git push origin :refs/tags/latest  # Delete the 'latest' tag remotely
            exit 1  # Exit the workflow to prevent further steps
          fi

          echo "✅ Version tag found: $VERSION_TAG"
          echo "VERSION_TAG=$VERSION_TAG" >> "$GITHUB_ENV"

      - name: Generate badge
        run: |
          echo "{ \"schemaVersion\": 1, \"label\": \"Latest Release\", \"message\": \"${{ env.VERSION_TAG }}\", \"color\": \"blue\" }" > latest.json

      - name: Upload badge as artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest-release-badge
          path: latest.json

      - name: Set GIST_ID_LATEST from secrets to environment
        run: echo "GIST_ID_LATEST=${{ secrets.GIST_ID_LATEST }}" >> $GITHUB_ENV

      - name: Update Gist
        if: env.GIST_ID_LATEST != ''
        run: |
          curl -X PATCH -H "Authorization: token ${{ secrets.GIST_TOKEN_LATEST }}" \
          -d "{\"files\": {\"latest.json\": {\"content\": \"$(cat latest.json)\"}}}" \
          https://api.github.com/gists/${{ env.GIST_ID_LATEST }}

      - name: Updating latest tag
        if: success()
        run: |
          echo "Doing some updating of the latest tag... somewhere..."

